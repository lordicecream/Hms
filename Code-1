import trino
from trino.auth import BasicAuthentication
from trino.dbapi import connect

def connect_to_trino(host, port, user, password):
    return connect(
        host=host,
        port=int(port),
        user=user,
        auth=BasicAuthentication(user, password),
        http_scheme='https',
        catalog='system',
        verify=False
    )

def schema_exists(conn, catalog, schema):
    cursor = conn.cursor()
    cursor.execute(f"SHOW SCHEMAS FROM {catalog}")
    schemas = [row[0] for row in cursor.fetchall()]
    return schema in schemas

def get_create_schema_sql(conn, catalog, schema):
    cursor = conn.cursor()
    cursor.execute(f"SHOW CREATE SCHEMA {catalog}.{schema}")
    return cursor.fetchall()[0][0]

def list_tables(conn, catalog, schema):
    cursor = conn.cursor()
    cursor.execute(f"SHOW TABLES FROM {catalog}.{schema}")
    return [row[0] for row in cursor.fetchall()]

def get_create_table_sql(conn, catalog, schema, table):
    cursor = conn.cursor()
    cursor.execute(f"SHOW CREATE TABLE {catalog}.{schema}.{table}")
    return cursor.fetchall()[0][0]

def replicate_schema_if_needed(source_conn, dest_conn, source_catalog, dest_catalog, schema):
    if not schema_exists(dest_conn, dest_catalog, schema):
        create_schema_sql = get_create_schema_sql(source_conn, source_catalog, schema)
        # Replace catalog name in the SQL
        adjusted_sql = create_schema_sql.replace(f"{source_catalog}.{schema}", f"{dest_catalog}.{schema}")
        cursor = dest_conn.cursor()
        cursor.execute(adjusted_sql)

def replicate_tables(source_conn, dest_conn, source_catalog, dest_catalog, schema, tables):
    cursor = dest_conn.cursor()
    for table in tables:
        create_table_sql = get_create_table_sql(source_conn, source_catalog, schema, table)
        adjusted_sql = create_table_sql.replace(f"{source_catalog}.{schema}.{table}", f"{dest_catalog}.{schema}.{table}")
        cursor.execute(adjusted_sql)

# --- Replace with your Trino details
source_host = 'your-trino-source-host'
dest_host = 'your-trino-dest-host'

port = 443
user = 'your-user'
password = 'your-password'
source_catalog = 'hmsa'
dest_catalog = 'hmsb'
schema = 'abc'

# --- Connect
source_conn = connect_to_trino(source_host, port, user, password)
dest_conn = connect_to_trino(dest_host, port, user, password)

# --- Replicate
replicate_schema_if_needed(source_conn, dest_conn, source_catalog, dest_catalog, schema)
tables = list_tables(source_conn, source_catalog, schema)
replicate_tables(source_conn, dest_conn, source_catalog, dest_catalog, schema, tables)
