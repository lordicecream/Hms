-- =====================================================================
-- Phase 0: Cleanup Previous Erroneous Data (Run First!)
-- =====================================================================
-- WARNING: Truncate only if you want to reset the target metastore for 'abc'
TRUNCATE TABLE target_metastore.public.cds CASCADE;
TRUNCATE TABLE target_metastore.public.serdes CASCADE;
TRUNCATE TABLE target_metastore.public.sds CASCADE;
TRUNCATE TABLE target_metastore.public.tbls CASCADE;
TRUNCATE TABLE target_metastore.public.partitions CASCADE;


-- =====================================================================
-- Phase 1: Replicate Core Metadata (Scoped to 'abc' Schema)
-- =====================================================================

-- 1.1 Insert DBS (databases)
INSERT INTO target_metastore.public.dbs (
  db_id, name, ctlg_name, db_location_uri, owner_name, owner_type, db_grants
)
SELECT 
  db_id, name, ctlg_name, db_location_uri, owner_name, owner_type, db_grants
FROM source_metastore.public.dbs 
WHERE name = 'abc'
AND NOT EXISTS (
  SELECT 1 FROM target_metastore.public.dbs WHERE name = 'abc'
);

-- Validate DBS
SELECT 
  'DBS' AS table_name,
  (SELECT COUNT(*) FROM source_metastore.public.dbs WHERE name = 'abc') AS source_count,
  (SELECT COUNT(*) FROM target_metastore.public.dbs WHERE name = 'abc') AS target_count;


-- 1.2 Insert CDS (column descriptors used by 'abc' schema)
INSERT INTO target_metastore.public.cds (cd_id)
SELECT DISTINCT s.cd_id 
FROM source_metastore.public.sds s
JOIN source_metastore.public.tbls t ON s.sd_id = t.sd_id
JOIN source_metastore.public.dbs d ON t.db_id = d.db_id
WHERE d.name = 'abc'
AND NOT EXISTS (
  SELECT 1 FROM target_metastore.public.cds 
  WHERE cd_id = s.cd_id
);

-- Validate CDS
SELECT 
  'CDS' AS table_name,
  (SELECT COUNT(DISTINCT s.cd_id) 
   FROM source_metastore.public.sds s
   JOIN source_metastore.public.tbls t ON s.sd_id = t.sd_id
   JOIN source_metastore.public.dbs d ON t.db_id = d.db_id
   WHERE d.name = 'abc') AS source_count,
  (SELECT COUNT(*) FROM target_metastore.public.cds) AS target_count;


-- 1.3 Insert SERDES (serializers used by 'abc' schema)
INSERT INTO target_metastore.public.serdes (
  serde_id, name, slib, description
)
SELECT DISTINCT s.serde_id, s.name, s.slib, s.description
FROM source_metastore.public.sds s
JOIN source_metastore.public.tbls t ON s.sd_id = t.sd_id
JOIN source_metastore.public.dbs d ON t.db_id = d.db_id
WHERE d.name = 'abc'
AND NOT EXISTS (
  SELECT 1 FROM target_metastore.public.serdes 
  WHERE serde_id = s.serde_id
);

-- Validate SERDES
SELECT 
  'SERDES' AS table_name,
  (SELECT COUNT(DISTINCT s.serde_id) 
   FROM source_metastore.public.sds s
   JOIN source_metastore.public.tbls t ON s.sd_id = t.sd_id
   JOIN source_metastore.public.dbs d ON t.db_id = d.db_id
   WHERE d.name = 'abc') AS source_count,
  (SELECT COUNT(*) FROM target_metastore.public.serdes) AS target_count;


-- 1.4 Insert SDS (storage descriptors for 'abc' schema)
INSERT INTO target_metastore.public.sds (
  sd_id, cd_id, input_format, output_format, is_compressed,
  location, num_buckets, serde_id, is_storedassubdirectories
)
SELECT 
  s.sd_id, s.cd_id, s.input_format, s.output_format, s.is_compressed,
  s.location, s.num_buckets, s.serde_id, s.is_storedassubdirectories
FROM source_metastore.public.sds s
JOIN source_metastore.public.tbls t ON s.sd_id = t.sd_id
JOIN source_metastore.public.dbs d ON t.db_id = d.db_id
WHERE d.name = 'abc'
AND NOT EXISTS (
  SELECT 1 FROM target_metastore.public.sds 
  WHERE sd_id = s.sd_id
);

-- Validate SDS
SELECT 
  'SDS' AS table
