-- hive_metastore_replication.sql
-- Replicates 'abc' schema from source to target metastore (PostgreSQL via Trino)
-- Run in order. Replace 'source_metastore' and 'target_metastore' with your catalog names.

-- =====================================================================
-- Phase 0: Cleanup (Run only if resetting target)
-- =====================================================================
/*
TRUNCATE TABLE target_metastore.public.cds CASCADE;
TRUNCATE TABLE target_metastore.public.serdes CASCADE;
TRUNCATE TABLE target_metastore.public.sds CASCADE;
TRUNCATE TABLE target_metastore.public.tbls CASCADE;
TRUNCATE TABLE target_metastore.public.partitions CASCADE;
*/

-- =====================================================================
-- Phase 1: Core Metadata
-- =====================================================================

-- 1.1 Insert Databases (DBS)
INSERT INTO target_metastore.public.dbs (
  db_id, name, db_location_uri, owner_name, owner_type
)
SELECT 
  db_id, name, db_location_uri, owner_name, owner_type
FROM source_metastore.public.dbs 
WHERE name = 'abc'
AND NOT EXISTS (
  SELECT 1 FROM target_metastore.public.dbs WHERE name = 'abc'
);

-- Validate DBS
SELECT 'DBS' AS table,
  (SELECT COUNT(*) FROM source_metastore.public.dbs WHERE name = 'abc') AS source,
  (SELECT COUNT(*) FROM target_metastore.public.dbs WHERE name = 'abc') AS target;


-- 1.2 Insert Column Descriptors (CDS)
INSERT INTO target_metastore.public.cds (cd_id)
SELECT DISTINCT sds.cd_id 
FROM source_metastore.public.sds sds
JOIN source_metastore.public.tbls tbl ON sds.sd_id = tbl.sd_id
JOIN source_metastore.public.dbs dbs ON tbl.db_id = dbs.db_id
WHERE dbs.name = 'abc'
AND NOT EXISTS (
  SELECT 1 FROM target_metastore.public.cds 
  WHERE cd_id = sds.cd_id
);

-- Validate CDS
SELECT 'CDS' AS table,
  (SELECT COUNT(DISTINCT sds.cd_id) FROM source_metastore.public.sds
  JOIN source_metastore.public.tbls ON sds.sd_id = tbls.sd_id
  JOIN source_metastore.public.dbs ON tbls.db_id = dbs.db_id
  WHERE dbs.name = 'abc') AS source,
  (SELECT COUNT(*) FROM target_metastore.public.cds) AS target;


-- 1.3 Insert Serializers (SERDES)
INSERT INTO target_metastore.public.serdes (
  serde_id, name, slib, description, 
  serde_type, serializer_class, deserializer_class
)
SELECT 
  serde_id, name, slib, description, 
  serde_type, serializer_class, deserializer_class
FROM source_metastore.public.serdes
WHERE serde_id IN (
  SELECT DISTINCT sds.serde_id 
  FROM source_metastore.public.sds sds
  JOIN source_metastore.public.tbls tbl ON sds.sd_id = tbl.sd_id
  JOIN source_metastore.public.dbs dbs ON tbl.db_id = dbs.db_id
  WHERE dbs.name = 'abc' AND sds.serde_id IS NOT NULL
)
AND NOT EXISTS (
  SELECT 1 FROM target_metastore.public.serdes 
  WHERE serde_id = source_metastore.public.serdes.serde_id
);

-- Validate SERDES
SELECT 'SERDES' AS table,
  (SELECT COUNT(DISTINCT sds.serde_id) FROM source_metastore.public.sds
  JOIN source_metastore.public.tbls ON sds.sd_id = tbls.sd_id
  JOIN source_metastore.public.dbs ON tbls.db_id = dbs.db_id
  WHERE dbs.name = 'abc') AS source,
  (SELECT COUNT(*) FROM target_metastore.public.serdes) AS target;


-- 1.4 Insert Storage Descriptors (SDS)
INSERT INTO target_metastore.public.sds (
  sd_id, cd_id, input_format, output_format, 
  is_compressed, location, num_buckets, 
  serde_id, is_storedassubdirectories
)
SELECT 
  sds.sd_id, sds.cd_id, sds.input_format, sds.output_format, 
  sds.is_compressed, sds.location, sds.num_buckets, 
  sds.serde_id, sds.is_storedassubdirectories
FROM source_metastore.public.sds sds
JOIN source_metastore.public.tbls tbl ON sds.sd_id = tbl.sd_id
JOIN source_metastore.public.dbs dbs ON tbl.db_id = dbs.db_id
WHERE dbs.name = 'abc'
AND NOT EXISTS (
  SELECT 1 FROM target_metastore.public.sds 
  WHERE sd_id = sds.sd_id
);

-- Validate SDS
SELECT 'SDS' AS table,
  (SELECT COUNT(*) FROM source_metastore.public.sds
  JOIN source_metastore.public.tbls ON sds.sd_id = tbls.sd_id
  JOIN source_metastore.public.dbs ON tbls.db_id = dbs.db_id
  WHERE dbs.name = 'abc') AS source,
  (SELECT COUNT(*) FROM target_metastore.public.sds) AS target;


-- =====================================================================
-- Phase 2: Tables & Columns
-- =====================================================================

-- 2.1 Insert Tables (TBL)
INSERT INTO target_metastore.public.tbls (
  tbl_id, tbl_name, db_id, sd_id, tbl_type, 
  owner, retention, create_time, last_access_time
)
SELECT 
  tbl_id, tbl_name, db_id, sd_id, tbl_type, 
  owner, retention, create_time, last_access_time
FROM source_metastore.public.tbls 
WHERE db_id = (SELECT db_id FROM source_metastore.public.dbs WHERE name = 'abc')
AND NOT EXISTS (
  SELECT 1 FROM target_metastore.public.tbls 
  WHERE tbl_id = source_metastore.public.tbls.tbl_id
);

-- Validate TBL
SELECT 'TBL' AS table,
  (SELECT COUNT(*) FROM source_metastore.public.t
