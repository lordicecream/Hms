pipeline {
    agent any
    environment {
        GIT_REPO_URL = 'https://your-git-server/your-project/trino-replicate.git'
        GIT_CREDENTIALS_ID = 'your-jenkins-git-creds-id'
        TRINO_CREDENTIALS_ID = 'your-trino-username-password-credentials-id'
        ARTIFACTS_PATH = './artifact'
    }
    parameters {
        string(name: 'SOURCE_TRINO', description: 'Source Trino Host')
        string(name: 'DEST_TRINO', description: 'Destination Trino Host')
        string(name: 'SOURCE_CATALOG', description: 'Source Catalog Name')
        string(name: 'DEST_CATALOG', description: 'Destination Catalog Name')
        string(name: 'SCHEMA_NAME', description: 'Schema name to replicate')
        booleanParam(name: 'DRY_RUN', defaultValue: true, description: 'Dry run mode?')
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'master',
                    url: "${env.GIT_REPO_URL}",
                    credentialsId: "${env.GIT_CREDENTIALS_ID}"
            }
        }
        stage('Prepare') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${env.TRINO_CREDENTIALS_ID}", usernameVariable: 'TRINO_USER', passwordVariable: 'TRINO_PASSWORD')]) {
                    sh '''
                        docker run --rm \
                        -v $PWD:/app \
                        -w /app \
                        python:3.9-slim \
                        sh -c "pip install trino tqdm && \
                        python3 replicate_trino.py \
                          --source_trino_host $SOURCE_TRINO \
                          --dest_trino_host $DEST_TRINO \
                          --username $TRINO_USER \
                          --password $TRINO_PASSWORD \
                          --source_catalog $SOURCE_CATALOG \
                          --dest_catalog $DEST_CATALOG \
                          --schema_name $SCHEMA_NAME \
                          --dry_run $DRY_RUN \
                          --artifacts_path $ARTIFACTS_PATH"
                    '''
                }
            }
        }
    }
}
